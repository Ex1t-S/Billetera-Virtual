# üíº Proyecto Acad√©mico ‚Äî Billetera Virtual

Este repositorio corresponde a un **proyecto desarrollado para la facultad**, en el marco de la materia [Taller de lenguajes II] .  
El objetivo del trabajo es **aplicar y consolidar los conocimientos adquiridos sobre Java, programaci√≥n orientada a objetos, patrones de dise√±o (MVC, DAO), manejo de bases de datos, e interacci√≥n con APIs externas** mediante el desarrollo de una aplicaci√≥n funcional de billetera virtual.

El desarrollo de este proyecto permiti√≥ integrar:
- Modelado de datos y relaciones entre entidades.
- L√≥gica de negocio y controladores.
- Persistencia con base de datos y acceso v√≠a DAOs.
- Implementaci√≥n de interfaz gr√°fica.
- Pr√°ctica con consumo de servicios externos (APIs de precios cripto).

# üí∏ Billetera Virtual Java

Aplicaci√≥n de billetera virtual desarrollada en Java, que permite a los usuarios gestionar activos en monedas FIAT y CRIPTOMONEDAS, consultar balances y precios en tiempo real, y mantener un historial completo de transacciones.

---

## üöÄ Caracter√≠sticas principales

- **Registro y autenticaci√≥n de usuarios**.
- **Gesti√≥n de billetera**: agreg√°, elimin√° y visualiz√° activos en monedas fiat (ARS, USD, EUR, etc.) y criptomonedas (BTC, ETH, etc.).
- **Consulta de precios en tiempo real** de criptomonedas (usando API externa).
- **Historial de transacciones**: compra, venta y transferencias, con filtros y detalles.
- **Balance general** en diferentes monedas.
- **Arquitectura profesional**: patr√≥n MVC, DAO y modelo orientado a objetos.

---

## üóÇÔ∏è Estructura del proyecto

- `src/model/` ‚Äî Entidades del dominio: Usuario, Persona, Moneda, Activo, Wallet, etc.
- `src/controller/` ‚Äî Controladores (l√≥gica de negocio y orquestaci√≥n).
- `src/view/` ‚Äî Interfaces gr√°ficas (Swing/JavaFX o consola).
- `src/dao/` ‚Äî Acceso y manipulaci√≥n de la base de datos (CRUD).
- `src/bd/` ‚Äî Utilidades y entidades persistentes (BD).
- Otros archivos de configuraci√≥n y utilidad.

---

## üõ†Ô∏è Instalaci√≥n y ejecuci√≥n

1. **Clonar el repositorio:**

    ```bash
    git clone https://github.com/Ex1t-S/Billetera-Virtual.git
    cd Billetera-Virtual
    ```

2. **Configurar la base de datos:**
    - El proyecto utiliza una base relacional (por defecto, SQLite/MySQL).
    - Revis√° la configuraci√≥n en `ConexionBD.java`.
    - Si es necesario, cre√° las tablas usando el script SQL incluido (si existe) o la primera ejecuci√≥n del programa.

3. **Compilar y ejecutar el proyecto:**
    - Us√° tu IDE favorito (IntelliJ, Eclipse, NetBeans) o por consola:
    ```bash
    javac -d bin src/**/*.java
    java -cp bin MainClass # Reemplaz√° "MainClass" por tu clase principal
    ```

4. **Usuarios de prueba:**
    - Hay cuentas ya cargadas con saldo inicial.  
      Ejemplo:  
      **Usuario:** vs@gmail.com  
      **Contrase√±a:** Ceres789  
    - Pod√©s crear nuevos usuarios desde la pantalla de registro.

5. **Nota sobre el balance:**  
   Si hac√©s una compra y no ves el balance actualizado, cerr√° sesi√≥n y volv√© a iniciar o us√° el bot√≥n "Actualizar".

---

## üß© Dependencias

- Java 8 o superior.
- Driver JDBC para la base de datos elegida (incluido para SQLite/MySQL).
- (Opcional) Librer√≠as HTTP para consumo de APIs externas de precios cripto.


## üìà Mejoras futuras

- Interfaz gr√°fica avanzada (mejorar la UX).
- Notificaciones autom√°ticas de cambios de saldo.
- Soporte para m√°s monedas y nuevas operaciones.
- Test unitarios y cobertura.

---

## üìú Cr√©ditos y licencia

Desarrollado por **German Arroyo** para fines educativos y pr√°cticos.  
Licencia: MIT
